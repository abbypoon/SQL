
--1.How many customers has Foodie-Fi ever had?

SELECT COUNT(DISTINCT(CUSTOMER_ID)) AS NUMNER_OF_CUSTOMER
FROM SUBSCRIPTIONS



--2.What is the monthly distribution of trial plan start_date values for our dataset - use the start of the month as the group by value

SELECT MONTH(START_DATE) AS MONTH, COUNT(DISTINCT(CUSTOMER_ID)) AS NUMNER_OF_CUSTOMER
FROM SUBSCRIPTIONS
WHERE PLAN_ID = 0
GROUP BY MONTH
ORDER BY MONTH



--3.What plan start_date values occur after the year 2020 for our dataset? Show the breakdown by count of events for each plan_name

SELECT PLAN_NAME, COUNT(DISTINCT(CUSTOMER_ID)) AS NUMNER_OF_CUSTOMER
FROM SUBSCRIPTIONS S
LEFT JOIN PLANS P
ON S.PLAN_ID = P.PLAN_ID 
WHERE YEAR(START_DATE) >2020
GROUP BY PLAN_NAME



--4.What is the customer count and percentage of customers who have churned rounded to 1 decimal place?

SELECT
    COUNT(DISTINCT S.CUSTOMER_ID) AS NUMBER_OF_CUSTOMERS,
    COUNT(DISTINCT 
        CASE WHEN P.PLAN_NAME = 'churn' THEN S.CUSTOMER_ID END) AS NUMBER_OF_CHURN,
    ROUND((COUNT(DISTINCT 
        CASE WHEN P.PLAN_NAME = 'churn' THEN S.CUSTOMER_ID END) * 100.0 / COUNT(DISTINCT S.CUSTOMER_ID)),1) AS PERCENTAGE_OF_CHURN
FROM
    SUBSCRIPTIONS S
LEFT JOIN
    PLANS P ON S.PLAN_ID = P.PLAN_ID;



--5.How many customers have churned straight after their initial free trial - what percentage is this rounded to the nearest whole number?

WITH ROW_TABLE AS (
SELECT CUSTOMER_ID,S.PLAN_ID,START_DATE, PLAN_NAME,
ROW_NUMBER() OVER
(PARTITION BY CUSTOMER_ID
ORDER BY  CUSTOMER_ID ASC) AS ROW_NUM
FROM SUBSCRIPTIONS S
LEFT JOIN PLANS P
ON S.PLAN_ID = P.PLAN_ID 
ORDER BY TO_VARIANT(CUSTOMER_ID), S.PLAN_ID)

SELECT COUNT(DISTINCT CUSTOMER_ID) AS TOTAL_NUMBER_OF_CUSTOMERS,
(SELECT COUNT(DISTINCT(CUSTOMER_ID)) FROM ROW_TABLE WHERE ROW_NUM = 2 AND PLAN_NAME = 'churn') AS NUMBER_OF_CUSTMENR,
ROUND(((SELECT COUNT(DISTINCT(CUSTOMER_ID))FROM ROW_TABLE WHERE ROW_NUM = 2 AND PLAN_NAME = 'churn')* 100.0 / COUNT(DISTINCT CUSTOMER_ID)),0) AS PERCENTAGE_OF_CUSTOMER
FROM SUBSCRIPTIONS S




--6.What is the number and percentage of customer plans after their initial free trial?

WITH ROW_TABLE AS (
SELECT CUSTOMER_ID,S.PLAN_ID,START_DATE, PLAN_NAME,
ROW_NUMBER() OVER
(PARTITION BY CUSTOMER_ID
ORDER BY  CUSTOMER_ID ASC) AS ROW_NUM
FROM SUBSCRIPTIONS S
LEFT JOIN PLANS P
ON S.PLAN_ID = P.PLAN_ID 
ORDER BY TO_VARIANT(CUSTOMER_ID), S.PLAN_ID),

PLAN_COUNT AS (

SELECT PLAN_NAME,COUNT(DISTINCT(CUSTOMER_ID)) AS NUM_OF_CUSTOMER
FROM ROW_TABLE 
WHERE ROW_NUM = 2
GROUP BY PLAN_NAME),

TOTAL_CUSTOMER AS (

SELECT COUNT(DISTINCT(CUSTOMER_ID))AS TOTAL_NUM_OF_CUSTOMER
FROM SUBSCRIPTIONS)


SELECT 
    PLAN_NAME,
    NUM_OF_CUSTOMER,
    ROUND((NUM_OF_CUSTOMER * 100.0 / TOTAL_NUM_OF_CUSTOMER), 0) AS PERCENTAGE_OF_CUSTOMER
FROM PLAN_COUNT, TOTAL_CUSTOMER
ORDER BY PERCENTAGE_OF_CUSTOMER DESC



--7.What is the customer count and percentage breakdown of all 5 plan_name values at 2020-12-31?

WITH CUSTOMER_PLAN AS(
SELECT CUSTOMER_ID, MAX(PLAN_ID)AS LASTEST_PLAN
FROM SUBSCRIPTIONS
WHERE START_DATE <= '2020-12-31'
GROUP BY CUSTOMER_ID),

LASTEST_PLAN_TABLE AS (
SELECT LASTEST_PLAN, COUNT(DISTINCT(CUSTOMER_ID)) AS NUM_OF_CUSTOMER
FROM CUSTOMER_PLAN
GROUP BY LASTEST_PLAN
ORDER BY LASTEST_PLAN ASC),

TOTAL_CUSTOMER AS (
SELECT COUNT(DISTINCT(CUSTOMER_ID)) AS TOTAL_NUM_OF_CUSTOMER
FROM SUBSCRIPTIONS
WHERE START_DATE <= '2020-12-31'),

PERCENTAGE_OF_CUSTOMER AS(
SELECT 
    LASTEST_PLAN,
    NUM_OF_CUSTOMER,
    ROUND((NUM_OF_CUSTOMER * 100.0 / TOTAL_NUM_OF_CUSTOMER), 0) AS PERCENTAGE_OF_CUSTOMER
FROM LASTEST_PLAN_TABLE, TOTAL_CUSTOMER
ORDER BY LASTEST_PLAN ASC)

SELECT PLAN_NAME, LASTEST_PLAN, NUM_OF_CUSTOMER, PERCENTAGE_OF_CUSTOMER
FROM PERCENTAGE_OF_CUSTOMER POC
LEFT JOIN PLANS P
ON POC.LASTEST_PLAN = P.PLAN_ID



--8.How many customers have upgraded to an annual plan in 2020?

WITH ROW_TABLE AS (
SELECT CUSTOMER_ID,S.PLAN_ID,START_DATE, PLAN_NAME,
ROW_NUMBER() OVER
    (PARTITION BY CUSTOMER_ID 
    ORDER BY  CUSTOMER_ID ASC) AS ROW_NUM
FROM SUBSCRIPTIONS S
LEFT JOIN PLANS P
ON S.PLAN_ID = P.PLAN_ID 
ORDER BY TO_VARIANT(CUSTOMER_ID), S.PLAN_ID
),
PRE_TABLE AS(
SELECT 
    CUSTOMER_ID, PLAN_ID, START_DATE, PLAN_NAME,
    LAG(PLAN_NAME) OVER 
    (PARTITION BY CUSTOMER_ID 
    ORDER BY CUSTOMER_ID ) AS PREV_PLAN_NAME,
     LAG(START_DATE) OVER 
    (PARTITION BY CUSTOMER_ID 
    ORDER BY CUSTOMER_ID ) AS PREV_UPDATE_DATE,
    EXTRACT(YEAR FROM START_DATE) AS START_YEAR
FROM ROW_TABLE
ORDER BY CUSTOMER_ID),

UPGRADED_TABLE AS(
SELECT CUSTOMER_ID, PLAN_NAME AS CUR_PLAN_NAME, START_YEAR, PREV_PLAN_NAME,  EXTRACT(YEAR FROM PREV_UPDATE_DATE) AS PREV_UPDATE_YEAR
FROM PRE_TABLE
WHERE PLAN_ID = 3 AND PREV_UPDATE_YEAR = 2020 AND START_YEAR=2020)

SELECT COUNT(DISTINCT(CUSTOMER_ID)) AS NUM_OF_UPGRADED_CUSTOMER
FROM UPGRADED_TABLE


--9.How many days on average does it take for a customer to an annual plan from the day they join Foodie-Fi?

WITH FIRST_JOIN AS(
SELECT 
        CUSTOMER_ID,
        MIN(START_DATE) AS JOIN_DATE
    FROM 
        SUBSCRIPTIONS
    GROUP BY 
        CUSTOMER_ID
        ),
        
NUM_OF_DAYS_TABLE AS (
SELECT S.CUSTOMER_ID, DATEDIFF(DAY,JOIN_DATE,START_DATE) AS NUM_OF_DAYS
FROM SUBSCRIPTIONS S
LEFT JOIN FIRST_JOIN FJ
ON S.CUSTOMER_ID = FJ.CUSTOMER_ID
WHERE PLAN_ID = 3),

TOTAL_NUM_OF_CUSTOMER_TABLE AS(
SELECT COUNT(DISTINCT(FJ.CUSTOMER_ID)) AS TOTAL_NUM_OF_CUSTOMER
FROM SUBSCRIPTIONS S
LEFT JOIN FIRST_JOIN FJ
ON S.CUSTOMER_ID = FJ.CUSTOMER_ID
WHERE PLAN_ID = 3)

SELECT 
ROUND(SUM(NUM_OF_DAYS) / AVG(TOTAL_NUM_OF_CUSTOMER),0) AS AVG_DAYS
FROM NUM_OF_DAYS_TABLE,TOTAL_NUM_OF_CUSTOMER_TABLE 




--10.Can you further breakdown this average value into 30 day periods (i.e. 0-30 days, 31-60 days etc)

WITH FIRST_JOIN AS(
SELECT 
        CUSTOMER_ID,
        MIN(START_DATE) AS JOIN_DATE
    FROM 
        SUBSCRIPTIONS
    GROUP BY 
        CUSTOMER_ID
        ),
NUM_OF_DAY_PER_CUSTOMER_TABLE AS(
SELECT S.CUSTOMER_ID, DATEDIFF(DAY,JOIN_DATE,START_DATE) AS NUM_OF_DAYS
FROM SUBSCRIPTIONS S
LEFT JOIN FIRST_JOIN FJ
ON S.CUSTOMER_ID = FJ.CUSTOMER_ID
WHERE PLAN_ID = 3)

SELECT 
CASE
WHEN NUM_OF_DAYS<=30  THEN '0-30'
WHEN NUM_OF_DAYS<=60  THEN '31-60'
WHEN NUM_OF_DAYS<=90  THEN '61-90'
WHEN NUM_OF_DAYS<=120  THEN '91-120'
WHEN NUM_OF_DAYS<=150  THEN '121-150'
WHEN NUM_OF_DAYS<=180  THEN '151-180'
WHEN NUM_OF_DAYS<=210  THEN '181-210'
WHEN NUM_OF_DAYS<=240  THEN '211-240'
WHEN NUM_OF_DAYS<=270  THEN '241-270'
WHEN NUM_OF_DAYS<=300  THEN '271-300'
WHEN NUM_OF_DAYS<=330  THEN '301-330'
WHEN NUM_OF_DAYS<=360  THEN '331-360'
END AS PERIODS,
COUNT(DISTINCT(CUSTOMER_ID)) AS NUM_OF_CUSTOMER
FROM NUM_OF_DAY_PER_CUSTOMER_TABLE
GROUP BY PERIODS


--11.How many customers downgraded from a pro monthly to a basic monthly plan in 2020?

WITH ROW_TABLE AS (
SELECT CUSTOMER_ID,S.PLAN_ID,START_DATE, PLAN_NAME,
ROW_NUMBER() OVER
    (PARTITION BY CUSTOMER_ID 
    ORDER BY  CUSTOMER_ID ASC) AS ROW_NUM
FROM SUBSCRIPTIONS S
LEFT JOIN PLANS P
ON S.PLAN_ID = P.PLAN_ID 
ORDER BY TO_VARIANT(CUSTOMER_ID), S.PLAN_ID
),
PRE_TABLE AS(
SELECT 
    CUSTOMER_ID, PLAN_ID, START_DATE, PLAN_NAME,
    LAG(PLAN_ID) OVER 
    (PARTITION BY CUSTOMER_ID 
    ORDER BY CUSTOMER_ID ) AS PREV_PLAN_ID,
     LAG(START_DATE) OVER 
    (PARTITION BY CUSTOMER_ID 
    ORDER BY CUSTOMER_ID ) AS PREV_UPDATE_DATE,
    EXTRACT(YEAR FROM START_DATE) AS START_YEAR
FROM ROW_TABLE
ORDER BY CUSTOMER_ID)

SELECT COUNT(DISTINCT(CUSTOMER_ID)) 
FROM PRE_TABLE
WHERE PLAN_ID = 1 AND PREV_PLAN_ID = 2


